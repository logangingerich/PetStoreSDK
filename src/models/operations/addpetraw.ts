/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as b64$ from "../../lib/base64.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AddPetRawResponse = components.Pet2 | Uint8Array | string;

/** @internal */
export const AddPetRawResponse$inboundSchema: z.ZodType<AddPetRawResponse, z.ZodTypeDef, unknown> =
    z.union([components.Pet2$inboundSchema, b64$.zodInbound]);

/** @internal */
export type AddPetRawResponse$Outbound = components.Pet2$Outbound | Uint8Array;

/** @internal */
export const AddPetRawResponse$outboundSchema: z.ZodType<
    AddPetRawResponse$Outbound,
    z.ZodTypeDef,
    AddPetRawResponse
> = z.union([components.Pet2$outboundSchema, b64$.zodOutbound]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddPetRawResponse$ {
    /** @deprecated use `AddPetRawResponse$inboundSchema` instead. */
    export const inboundSchema = AddPetRawResponse$inboundSchema;
    /** @deprecated use `AddPetRawResponse$outboundSchema` instead. */
    export const outboundSchema = AddPetRawResponse$outboundSchema;
    /** @deprecated use `AddPetRawResponse$Outbound` instead. */
    export type Outbound = AddPetRawResponse$Outbound;
}
