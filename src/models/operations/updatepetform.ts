/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as b64$ from "../../lib/base64.js";
import * as z from "zod";

export type UpdatePetFormResponse =
    | Uint8Array
    | string
    | ReadableStream<Uint8Array>
    | Blob
    | ArrayBuffer
    | Buffer;

/** @internal */
export const UpdatePetFormResponse$inboundSchema: z.ZodType<
    UpdatePetFormResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    b64$.zodInbound,
    z.union([
        z.instanceof(ReadableStream<Uint8Array>),
        z.instanceof(Blob),
        z.instanceof(ArrayBuffer),
        z.instanceof(Buffer),
    ]),
]);

/** @internal */
export type UpdatePetFormResponse$Outbound =
    | Uint8Array
    | ReadableStream<Uint8Array>
    | Blob
    | ArrayBuffer
    | Buffer;

/** @internal */
export const UpdatePetFormResponse$outboundSchema: z.ZodType<
    UpdatePetFormResponse$Outbound,
    z.ZodTypeDef,
    UpdatePetFormResponse
> = z.union([
    b64$.zodOutbound,
    z.union([
        z.instanceof(ReadableStream<Uint8Array>),
        z.instanceof(Blob),
        z.instanceof(ArrayBuffer),
        z.instanceof(Buffer),
    ]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePetFormResponse$ {
    /** @deprecated use `UpdatePetFormResponse$inboundSchema` instead. */
    export const inboundSchema = UpdatePetFormResponse$inboundSchema;
    /** @deprecated use `UpdatePetFormResponse$outboundSchema` instead. */
    export const outboundSchema = UpdatePetFormResponse$outboundSchema;
    /** @deprecated use `UpdatePetFormResponse$Outbound` instead. */
    export type Outbound = UpdatePetFormResponse$Outbound;
}
